{"version":3,"sources":["../src/main.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAM,QAAQ,qBAAM,yBAAN,CAAR;;AAEN,SAAS,UAAT,CAAqB,iBAArB,EAAwC,OAAxC,EAAiD,IAAjD,EAAuD;AACrD,MAAI,wBAAW,OAAX,CAAJ,EAAyB;AACvB,WAAO,OAAP,CADuB;AAEvB,cAAU,EAAV,CAFuB;GAAzB;AAIA,MAAI,CAAC,iBAAD,EAAoB;AACtB,WAAO,KAAK,IAAI,KAAJ,CAAU,gCAAV,CAAL,CAAP,CADsB;GAAxB;;AAIA,SAAO,2BAAgB,iBAAhB,EAAmC,UAAU,GAAV,EAAe;AACvD,QAAI,GAAJ,EAAS,OAAO,KAAK,GAAL,CAAP,CAAT;AACA,UAAM,gCAAN,EAAwC,oBAAS,iBAAT,CAAxC,EAFuD;AAGvD,WAAO,KAAK,IAAL,EAAW,SAAS,iBAAT,EAA4B,OAA5B,CAAX,CAAP,CAHuD;GAAf,CAA1C,CATqD;CAAvD;;AAgBA,SAAS,QAAT,CAAmB,iBAAnB,EAAsC,OAAtC,EAA+C;AAC7C,SAAO,SAAS,SAAT,CAAoB,SAApB,EAA+B,MAA/B,EAAuC,QAAvC,EAAiD;AACtD,QAAI,wBAAW,MAAX,CAAJ,EAAwB;AACtB,iBAAW,MAAX,CADsB;AAEtB,eAAS,EAAT,CAFsB;KAAxB;AAIA,QAAI,aAAa,IAAb,EAAmB;AACrB,aAAO,SAAS,IAAI,KAAJ,CAAU,8BAAV,CAAT,CAAP,CADqB;KAAvB;;AAIA,QAAI,KAAK,4BAAqB,0BAAqB,SAA1C,EAAuD,OAAvD,CAAL,CATkD;AAUtD,QAAI,WAAW,IAAX,EAAiB;AACnB,aAAO,SAAS,IAAT,EAAe,UAAU,MAAV,EAAkB,GAAlB,EAAuB,IAAvB,EAA6B;AACjD,WAAG,MAAH,CAAU,MAAV,EAAkB,UAAU,GAAV,EAAe,MAAf,EAAuB;AACvC,mBAAS,UAAU,EAAV,CAD8B;AAEvC,eAAK,GAAL,EAAU,OAAO,IAAP,EAAa,OAAO,IAAP,CAAvB,CAFuC;SAAvB,CAAlB,CADiD;OAA7B,CAAtB,CADmB;KAArB;;AASA,OAAG,MAAH,CAAU,MAAV,EAAkB,UAAU,GAAV,EAAe,MAAf,EAAuB;AACvC,eAAS,UAAU,EAAV,CAD8B;AAEvC,eAAS,GAAT,EAAc,OAAO,IAAP,EAAa,OAAO,IAAP,CAA3B,CAFuC;KAAvB,CAAlB,CAnBsD;GAAjD,CADsC;CAA/C;;AA2BA,WAAW,aAAX;AACA,WAAW,QAAX;;kBAEe","file":"main.js","sourcesContent":["import {ensureDirectory} from './util'\nimport {isFunction} from 'lodash'\nimport EmailTemplate from './email-template'\nimport Debug from 'debug'\nimport {basename} from 'path'\nimport {requires} from 'consolidate'\n\nconst debug = Debug('email-templates:creator')\n\nfunction exportable (templateDirectory, options, done) {\n  if (isFunction(options)) {\n    done = options\n    options = {}\n  }\n  if (!templateDirectory) {\n    return done(new Error('templateDirectory is undefined'))\n  }\n\n  return ensureDirectory(templateDirectory, function (err) {\n    if (err) return done(err)\n    debug('Creating Email Templates in %s', basename(templateDirectory))\n    return done(null, template(templateDirectory, options))\n  })\n}\n\nfunction template (templateDirectory, options) {\n  return function _template (directory, locals, callback) {\n    if (isFunction(locals)) {\n      callback = locals\n      locals = {}\n    }\n    if (directory == null) {\n      return callback(new Error('templateName was not defined'))\n    }\n\n    var et = new EmailTemplate(`${templateDirectory}/${directory}`, options)\n    if (locals === true) {\n      return callback(null, function (locals, dir, next) {\n        et.render(locals, function (err, result) {\n          result = result || {}\n          next(err, result.html, result.text)\n        })\n      })\n    }\n\n    et.render(locals, function (err, result) {\n      result = result || {}\n      callback(err, result.html, result.text)\n    })\n  }\n}\n\nexportable.EmailTemplate = EmailTemplate\nexportable.requires = requires\n\nexport default exportable\n"]}