{"version":3,"sources":["../src/util.js"],"names":[],"mappings":";;;;;QAQgB;QAWA;QAgBA;;;;;;;;;;;;;;;;AA9BhB,IAAM,YAAY,mBAAE,SAAF,cAAZ;AACN,IAAM,QAAQ,mBAAE,SAAF,gBAAR;;AAEC,SAAS,eAAT,CAA0B,IAA1B,EAAgC,QAAhC,EAA0C;AAC/C,SAAO,uBAAM,UAAC,OAAD,EAAU,MAAV,EAAqB;AAChC,kBAAK,IAAL,EAAW,UAAC,GAAD,EAAM,IAAN,EAAe;AACxB,UAAI,GAAJ,EAAS,OAAO,OAAO,GAAP,CAAP,CAAT;AACA,UAAI,CAAC,KAAK,WAAL,EAAD,EAAqB,OAAO,QAAP,CAAzB;AACA,gBAHwB;KAAf,CAAX,CADgC;GAArB,CAAN,CAON,OAPM,CAOE,QAPF,CAAP,CAD+C;CAA1C;;AAWA,SAAS,YAAT,CAAuB,IAAvB,EAA6B,IAA7B,EAAmC;AACxC,SAAO,MAAS,cAAS,WAAlB,EACN,IADM,CACD,UAAC,KAAD,EAAW;AACf,QAAI,CAAC,MAAM,MAAN,EAAc,OAAO,IAAP,CAAnB;;AAEA,WAAO,UAAU,MAAM,CAAN,CAAV,EAAoB,MAApB,EACN,IADM,CACD,UAAC,OAAD,EAAa;AACjB,UAAI,CAAC,QAAQ,MAAR,EAAgB,OAAO,IAAP,CAArB;AACA,aAAO;AACL,kBAAU,MAAM,CAAN,CAAV;AACA,iBAAS,OAAT;OAFF,CAFiB;KAAb,CADN,CAHe;GAAX,CADN,CADwC;CAAnC;;AAgBA,SAAS,UAAT,CAAqB,IAArB,EAA2B,OAA3B,EAAoC;AACzC,MAAI,CAAC,IAAD,EAAO,OAAO,mBAAE,OAAF,CAAU,IAAV,CAAP,CAAX;AACA,SAAO,6BAAO,IAAP,EAAa,OAAb,CAAP,CAFyC;CAApC","file":"util.js","sourcesContent":["import P from 'bluebird'\nimport {readFile, stat} from 'fs'\nimport glob from 'glob'\nimport {render} from './template-manager'\n\nconst readFileP = P.promisify(readFile)\nconst globP = P.promisify(glob)\n\nexport function ensureDirectory (path, callback) {\n  return new P((resolve, reject) => {\n    stat(path, (err, stat) => {\n      if (err) return reject(err)\n      if (!stat.isDirectory()) return reject()\n      resolve()\n    })\n  })\n  .nodeify(callback)\n}\n\nexport function readContents (path, type) {\n  return globP(`${path}/*${type}.*`)\n  .then((files) => {\n    if (!files.length) return null\n\n    return readFileP(files[0], 'utf8')\n    .then((content) => {\n      if (!content.length) return null\n      return {\n        filename: files[0],\n        content: content\n      }\n    })\n  })\n}\n\nexport function renderFile (file, options) {\n  if (!file) return P.resolve(null)\n  return render(file, options)\n}\n\n"]}